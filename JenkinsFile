pipeline {
    agent any

    environment {
        MAVEN_HOME = "C:/Program Files/Maven/apache-maven-3.9.9" // Replace with your actual Maven path
        PATH = "${env.MAVEN_HOME}/bin;${env.PATH}" // Add Maven to PATH for Windows
        EMAIL_RECIPIENT = "ssgulluoglu@gmail.com" // Replace with actual recipient email
    }

    stages {

        // Stage 1: Build the application
        stage('Build') {
            steps {
                echo 'Building the application...'
                // Use %MAVEN_HOME% in the bat command for Windows
                bat '"%MAVEN_HOME%\\bin\\mvn" clean package'
            }
        }

        // Stage 2: Run Unit and Integration Tests
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running Unit and Integration Tests...'
                // Run Maven test phase
                bat '"%MAVEN_HOME%\\bin\\mvn" test'
            }
            post {
                always {
                    // Collect and display test results
                    junit '**/target/surefire-reports/*.xml'
                }
                success {
                    // Send email on success
                    emailext (
                        to: "${env.EMAIL_RECIPIENT}",
                        subject: "Jenkins Pipeline - Tests SUCCESS",
                        body: "The Unit and Integration Tests completed successfully.",
                        attachLog: true
                    )
                }
                failure {
                    // Send email on failure
                    emailext (
                        to: "${env.EMAIL_RECIPIENT}",
                        subject: "Jenkins Pipeline - Tests FAILURE",
                        body: "The Unit and Integration Tests failed. Check the logs for details.",
                        attachLog: true
                    )
                }
            }
        }

        // Stage 3: Code Analysis with SonarQube
        stage('Code Analysis') {
            steps {
                echo 'Running Code Analysis with SonarQube...'
                // Run SonarQube analysis
                withSonarQubeEnv('SonarQube') {
                    bat '"%MAVEN_HOME%\\bin\\mvn" sonar:sonar'
                }
            }
        }

        // Stage 4: Security Scan using OWASP Dependency Check
        stage('Security Scan') {
            steps {
                echo 'Running Security Scan with OWASP Dependency-Check...'
                // Run OWASP Dependency Check for vulnerabilities
                bat '"%MAVEN_HOME%\\
