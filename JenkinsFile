pipeline {
    agent any

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                echo 'Building the application...'
                bat '"C:/Program Files/Maven/apache-maven-3.9.9/bin/mvn" clean package'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running Unit and Integration Tests...'
                bat '"C:/Program Files/Maven/apache-maven-3.9.9/bin/mvn" test'
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }

        stage('Code Analysis with SonarQube') {
            steps {
                echo 'Running Code Analysis with SonarQube...'
                withSonarQubeEnv('YourSonarQubeServer') {
                    bat '"C:/Program Files/Maven/apache-maven-3.9.9/bin/mvn" sonar:sonar -Dsonar.login=$SONAR_LOGIN -Dsonar.password=$SONAR_PASSWORD'
                }
            }
            post {
                failure {
                    echo 'SonarQube analysis failed. Please check credentials or SonarQube server.'
                }
            }
        }

        stage('Security Scan') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                echo 'Running Security Scan...'
                // Add your security scan steps here (e.g., OWASP Dependency Check)
            }
        }

        stage('Deploy to Staging') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                echo 'Deploying to Staging...'
                // Add your deployment steps here
            }
        }

        stage('Integration Tests on Staging') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                echo 'Running Integration Tests on Staging...'
                // Add your integration testing steps here
            }
        }

        stage('Deploy to Production') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                echo 'Deploying to Production...'
                // Add your production deployment steps here
            }
        }
    }

    post {
        always {
            emailext(
                to: 'ssgulluoglu@gmail.com',
                subject: "Jenkins Pipeline Build: ${currentBuild.fullDisplayName}",
                body: "Check the status of the build here: ${env.BUILD_URL}\n\n${currentBuild.result}"
            )
        }

        failure {
            echo 'Build failed. Skipping deployment stages.'
        }
    }
}
