pipeline {
    agent any

    environment {
        MAVEN_HOME = "C:/Program Files/Maven/apache-maven-3.9.9" // Replace with your actual Maven installation path
        PATH = "${MAVEN_HOME}/bin:${env.PATH}" // Add Maven to the PATH
    }

    stages {
        // Stage 1: Build
        stage('Build') {
            steps {
                script {
                    // Compile and package the code using Maven
                    echo 'Building the application...'
                    sh '${MAVEN_HOME}/bin/mvn clean package'
                }
            }
        }

        // Stage 2: Unit and Integration Tests
        stage('Unit and Integration Tests') {
            steps {
                script {
                    // Run unit and integration tests using Maven
                    echo 'Running Unit and Integration Tests...'
                    sh '${MAVEN_HOME}/bin/mvn test'
                }
            }
            post {
                success {
                    emailext (
                        to: "ssgulluoglu@gmail.com",
                        subject: "Jenkins Pipeline - Unit and Integration Tests - SUCCESS",
                        body: "The Unit and Integration Tests stage has completed successfully.",
                        attachLog: true
                    )
                }
                failure {
                    emailext (
                        to: "ssgulluoglu@gmail.com",
                        subject: "Jenkins Pipeline - Unit and Integration Tests - FAILURE",
                        body: "The Unit and Integration Tests stage has failed. Please check the Jenkins logs for more details.",
                        attachLog: true
                    )
                }
            }
        }

        // Stage 3: Code Analysis
        stage('Code Analysis') {
            steps {
                script {
                    // Analyze the code using SonarQube
                    echo 'Running Code Analysis with SonarQube...'
                    withSonarQubeEnv('SonarQube') {
                        sh '${MAVEN_HOME}/bin/mvn sonar:sonar'
                    }
                }
            }
        }

        // Stage 4: Security Scan
        stage('Security Scan') {
            steps {
                script {
                    // Perform security scan using OWASP Dependency-Check
                    echo 'Running Security Scan with OWASP Dependency-Check...'
                    sh '${MAVEN_HOME}/bin/mvn org.owasp:dependency-check-maven:check'
                }
            }
            post {
                success {
                    emailext (
                        to: "ssgulluoglu@gmail.com",
                        subject: "Jenkins Pipeline - Security Scan - SUCCESS",
                        body: "The Security Scan stage has completed successfully.",
                        attachLog: true
                    )
                }
                failure {
                    emailext (
                        to: "ssgulluoglu@gmail.com",
                        subject: "Jenkins Pipeline - Security Scan - FAILURE",
                        body: "The Security Scan stage has failed. Please check the Jenkins logs for more details.",
                        attachLog: true
                    )
                }
            }
        }

        // Stage 5: Deploy to Staging
        stage('Deploy to Staging') {
            steps {
                script {
                    // Deploy the application to a staging environment using Ansible
                    echo 'Deploying to Staging Environment...'
                    sh 'ansible-playbook -i staging_inventory deploy.yml'
                }
            }
        }

        // Stage 6: Integration Tests on Staging
        stage('Integration Tests on Staging') {
            steps {
                script {
                    // Run integration tests on the staging environment
                    echo 'Running Integration Tests on Staging...'
                    sh '${MAVEN_HOME}/bin/mvn verify'
                }
            }
            post {
                success {
                    emailext (
                        to: "ssgulluoglu@gmail.com",
                        subject: "Jenkins Pipeline - Integration Tests on Staging - SUCCESS",
                        body: "The Integration Tests on Staging stage has completed successfully.",
                        attachLog: true
                    )
                }
                failure {
                    emailext (
                        to: "ssgulluoglu@gmail.com",
                        subject: "Jenkins Pipeline - Integration Tests on Staging - FAILURE",
                        body: "The Integration Tests on Staging stage has failed. Please check the Jenkins logs for more details.",
                        attachLog: true
                    )
                }
            }
        }

        // Stage 7: Deploy to Production
        stage('Deploy to Production') {
            steps {
                script {
                    // Deploy the application to production using Ansible
                    echo 'Deploying to Production Environment...'
                    sh 'ansible-playbook -i production_inventory deploy.yml'
                }
            }
        }
    }
}


